<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nginx on Ernestas Poškus technical blog</title>
    <link>http://out13.com/tags/nginx/</link>
    <description>Recent content in nginx on Ernestas Poškus technical blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Mar 2017 08:44:03 +0200</lastBuildDate><atom:link href="http://out13.com/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Serving fresh assets using Nginx location rewrite</title>
      <link>http://out13.com/posts/serving-fresh-assets-using-nginx-rewrite/</link>
      <pubDate>Wed, 08 Mar 2017 08:44:03 +0200</pubDate>
      
      <guid>http://out13.com/posts/serving-fresh-assets-using-nginx-rewrite/</guid>
      <description>Recently I have stumbled upon a problem to serve fresh/new assets for user web application.
As Phil Karlton said:
 There are only two hard things in Computer Science: cache invalidation and naming things.
 Historically fresh assets problem was approached either by appending appending url query params (?v=20130102) or renaming/hashing asset file completely (/css/default-2j9alkjan2k2.css).
Former is most popular one but not elegant since it brings explicit dependency for backend application what fresh/new asset file to include thus requires exact name file to be present on web server.</description>
    </item>
    
  </channel>
</rss>
