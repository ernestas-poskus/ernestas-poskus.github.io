<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ansible on Ernestas Poškus</title>
    <link>http://out13.com/tags/ansible/</link>
    <description>Recent content in Ansible on Ernestas Poškus</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 03 Nov 2016 08:48:29 +0200</lastBuildDate>
    
	<atom:link href="http://out13.com/tags/ansible/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Generating configuration from Ansible variables</title>
      <link>http://out13.com/posts/generating-configuration-from-ansible-variables/</link>
      <pubDate>Thu, 03 Nov 2016 08:48:29 +0200</pubDate>
      
      <guid>http://out13.com/posts/generating-configuration-from-ansible-variables/</guid>
      <description>If you have ever tried to render Ansible multi hash or list variable you probably something alike.
global: scrape_interval: &amp;quot;{{ prometheus_config_global_scrape_interval | to_nice_yaml }}&amp;quot; evaluation_interval: &amp;quot;{{ prometheus_config_global_evaluation_interval | to_nice_yaml }}&amp;quot; scrape_timeout: &amp;quot;{{ prometheus_config_global_scrape_timeout | to_nice_yaml }}&amp;quot; external_labels: &amp;quot;{{ prometheus_config_global_external_labels | to_nice_yaml }}&amp;quot;  This generates invalid and ugly YAML.
global: scrape_interval: &amp;quot;15s ... &amp;quot; evaluation_interval: &amp;quot;30s ... &amp;quot; scrape_timeout: &amp;quot;10s ... &amp;quot; external_labels: &amp;quot;null ... &amp;quot;  TLDR If you are persistent thus configuration maniac you probably found a way either by destructuring hash or made extra redundant variables around complex one.</description>
    </item>
    
    <item>
      <title>Testing Ansible on multiple platforms</title>
      <link>http://out13.com/posts/ansible-testing-multiple-platforms/</link>
      <pubDate>Sun, 25 Sep 2016 19:12:59 +0300</pubDate>
      
      <guid>http://out13.com/posts/ansible-testing-multiple-platforms/</guid>
      <description>It is very uncommon to find tests on Ansible playbooks. However when they exist it means playbook was created with care.
When playbook is created with Ansible command ansible-galaxy init myplaybook it creates number of directories and files, includes basic Travis CI .travis.yml file.
script: # Basic role syntax check - ansible-playbook tests/test.yml -i tests/inventory --syntax-check  Basic Travis script brings standard virtual environment operating system which is Ubuntu 12.</description>
    </item>
    
  </channel>
</rss>