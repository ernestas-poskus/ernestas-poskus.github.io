<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on Ernestas Poškus.io</title>
    <link>http://out13.com/tags/tools/index.xml</link>
    <description>Recent content in Tools on Ernestas Poškus.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://out13.com/tags/tools/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>/proc/meminfo - memory usage statistics</title>
      <link>http://out13.com/tools/proc-meminfo/</link>
      <pubDate>Mon, 31 Jul 2017 19:25:47 +0300</pubDate>
      
      <guid>http://out13.com/tools/proc-meminfo/</guid>
      <description>

&lt;p&gt;Reports statistics about memory usage on the system.
Useful for inspecting more granular memory usage.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Sample output below.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;$ cat /proc/meminfo
MemTotal:       12189912 kB
MemFree:          231992 kB
MemAvailable:    4174992 kB
Buffers:          430884 kB
Cached:          4515856 kB
SwapCached:           60 kB
Active:          8019760 kB
Inactive:        3120804 kB
Active(anon):    6121448 kB
Inactive(anon):  1099620 kB
Active(file):    1898312 kB
Inactive(file):  2021184 kB
Unevictable:        3088 kB
Mlocked:            3088 kB
SwapTotal:      12467708 kB
SwapFree:       12467352 kB
Dirty:              1568 kB
Writeback:             0 kB
AnonPages:       6196916 kB
Mapped:          1339276 kB
Shmem:           1027248 kB
Slab:             584576 kB
SReclaimable:     349700 kB
SUnreclaim:       234876 kB
KernelStack:       20800 kB
PageTables:        93864 kB
NFS_Unstable:          0 kB
Bounce:                0 kB
WritebackTmp:          0 kB
CommitLimit:    18562664 kB
Committed_AS:   19186116 kB
VmallocTotal:   34359738367 kB
VmallocUsed:           0 kB
VmallocChunk:          0 kB
HardwareCorrupted:     0 kB
AnonHugePages:   1019904 kB
CmaTotal:              0 kB
CmaFree:               0 kB
HugePages_Total:       0
HugePages_Free:        0
HugePages_Rsvd:        0
HugePages_Surp:        0
Hugepagesize:       2048 kB
DirectMap4k:      386324 kB
DirectMap2M:    12083200 kB
DirectMap1G:           0 kB
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;interpreting-each-one&#34;&gt;Interpreting each one&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;MemTotal:       12189912 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Total usable RAM memory minus reserved bits and kernel binary.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;MemFree:          231992 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sum of &lt;code&gt;LowFree&lt;/code&gt; and &lt;code&gt;HighFree&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;MemAvailable:    4174992 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Self explanatory.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Buffers:          430884 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Temporary storage for raw disk blocks.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Cached:          4515856 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Does not include &lt;code&gt;SwapCached&lt;/code&gt; in memory cache of files read from disk.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;SwapCached:           60 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Memory once swapped out and swapped back in but still also in the swap file.
In event of memory pressure swapped pages don&amp;rsquo;t need to be swapped out again
since they are already present.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Active:          8019760 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Memory used more recently.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Inactive:        3120804 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Memory used less recently. More eligible to be reclaimed.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Active(anon):    6121448 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Anonymous memory used more recently.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Inactive(anon):  1099620 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Anonymous memory used less recently, can be swapped out.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Active(file):    1898312 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Page cache (file cache) memory used more recently.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Inactive(file):  2021184 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Page cache (file cache) memory used less recently, can be reclaimed.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Unevictable:        3088 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Self explanatory.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Mlocked:            3088 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Locked memory pages using &lt;code&gt;mlock()&lt;/code&gt; syscall, unevictable.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;SwapTotal:      12467708 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Self explanatory.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;SwapFree:       12467352 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Remaining swap space available.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Dirty:              1568 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Memory waiting to be written to disk.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Writeback:             0 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Memory being actively written to disk.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;AnonPages:       6196916 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Non-file backed pages mapped in userland.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Mapped:          1339276 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Files mapped to memory using &lt;code&gt;mmapp()&lt;/code&gt; syscall.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Shmem:           1027248 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Amount of memory consumed by &lt;code&gt;tmpfs&lt;/code&gt; file system.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Slab:             584576 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Kernel data structures cache. More details in &lt;code&gt;/proc/slabinfo&lt;/code&gt; || slabtop.
Sum of &lt;code&gt;SReclaimable&lt;/code&gt; +  &lt;code&gt;SUnreclaim&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;SReclaimable:     349700 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Part of &lt;code&gt;Slab&lt;/code&gt; cache that can be reclaimed.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;SUnreclaim:       234876 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Part of &lt;code&gt;Slab&lt;/code&gt; cache, unevictable.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;KernelStack:       20800 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Amount of memory allocated for Kernel stacks.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;PageTables:        93864 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Memory allocated to lowest levels of page tables.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NFS_Unstable:          0 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;NFS file system pages sent to server but not yet committed.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Bounce:                0 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Memory used in block device &lt;strong&gt;bounce&lt;/strong&gt; buffers.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;WritebackTmp:          0 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Memory used in &lt;code&gt;FUSE&lt;/code&gt; (file system in user space) for temporary
write-back buffers.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;CommitLimit:    18562664 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Over commit memory limit adhered only if if strict over commit
accounting is enabled in &lt;code&gt;/proc/sys/vm/overcommit_memory&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Committed_AS:   19186116 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Amount of memory presently allocated on the system.
Committed memory is the sum of all memory allocated by the process,
even if it has not been &amp;lsquo;used&amp;rsquo;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;VmallocTotal:   34359738367 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Total sizes of &lt;code&gt;vmalloc&lt;/code&gt; memory area.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;VmallocUsed:           0 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Amount of &lt;code&gt;vmalloc&lt;/code&gt; area which is used.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;VmallocChunk:          0 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Largest contiguous block of &lt;code&gt;vmalloc&lt;/code&gt; memory which is being used.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;HardwareCorrupted:     0 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Amount of memory Kernel identified as corrupted.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;AnonHugePages:   1019904 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Non-file backed huge pages mapped into userland page tables.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;CmaTotal:              0 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Total pages allocated by contiguous memory allocator &lt;code&gt;CMA&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;CmaFree:               0 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Free contiguous memory allocator pages.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;HugePages_Total:       0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Size of the huge page tables.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;HugePages_Free:        0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Number of huge page tables that are free.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;HugePages_Rsvd:        0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Number of huge page tables where commitment to allocate has been made,
but actual allocation is not yet completed.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;HugePages_Surp:        0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Number of huge page tables above allowed value.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hugepagesize:       2048 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Size of huge page.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;DirectMap4k:      386324 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Number of bytes linearly mapped by Kernel in 4KB pages.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;DirectMap2M:    12083200 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Number of bytes linearly mapped by Kernel in 2M pages.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;DirectMap1G:           0 kB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Number of bytes linearly mapped by Kernel in 1G pages.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>slabtop - kernel slab cache information in real time</title>
      <link>http://out13.com/tools/slabtop-kernel-slab-cache-information-in-real-time/</link>
      <pubDate>Wed, 28 Jun 2017 18:57:58 +0300</pubDate>
      
      <guid>http://out13.com/tools/slabtop-kernel-slab-cache-information-in-real-time/</guid>
      <description>&lt;p&gt;Displays detailed kernel slab cache information by aggregating &lt;code&gt;/proc/slabinfo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Tool shows a glimpse into kernel data structures.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Sample output below.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;root@ow:~# slabtop -osc | head -n 20
 Active / Total Objects (% used)    : 4649227 / 4694474 (99.0%)
 Active / Total Slabs (% used)      : 153429 / 153429 (100.0%)
 Active / Total Caches (% used)     : 82 / 118 (69.5%)
 Active / Total Size (% used)       : 1259115.61K / 1273939.45K (98.8%)
 Minimum / Average / Maximum Object : 0.01K / 0.27K / 18.50K

  OBJS ACTIVE   USE OBJ SIZE  SLABS OBJ/SLAB CACHE SIZE NAME
327090 325687   99%    1.05K  10903       30    348896K ext4_inode_cache
1639344 1639083 99%    0.19K  78064       21    312256K dentry
217504 216070   99%    1.00K   6797       32    217504K ecryptfs_inode_cache
196352 192576   98%    0.61K   7552       26    120832K proc_inode_cache
519792 519564   99%    0.10K  13328       39     53312K buffer_head
410976 401655   97%    0.12K  12843       32     51372K kmalloc-128
 76020  72290   95%    0.57K   2715       28     43440K radix_tree_node
 19808  18066   91%    1.00K    619       32     19808K kmalloc-1024
 24668  24322   98%    0.55K    881       28     14096K inode_cache
432640 432640  100%    0.03K   3380      128     13520K kmalloc-32
337416 335756   99%    0.04K   3308      102     13232K ext4_extent_status
 56220  51332   91%    0.20K   2811       20     11244K vm_area_struct
122368 116329   95%    0.06K   1912       64      7648K kmalloc-64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Interesting object are &lt;code&gt;ext4_inode_cache&lt;/code&gt; and &lt;code&gt;dentry&lt;/code&gt;.
These are fs cache objects they speed up fs file/directory access.
The &lt;code&gt;ext4_inode_cache&lt;/code&gt; is underlying fs &lt;code&gt;kmem_cache&lt;/code&gt; structure cache.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Initialized in &lt;code&gt;fs/ext4/super.c&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;static int __init init_inodecache(void)
{
	ext4_inode_cachep = kmem_cache_create(&amp;quot;ext4_inode_cache&amp;quot;,
					     sizeof(struct ext4_inode_info),
					     0, (SLAB_RECLAIM_ACCOUNT|
						SLAB_MEM_SPREAD|SLAB_ACCOUNT),
					     init_once);
	if (ext4_inode_cachep == NULL)
		return -ENOMEM;
	return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;dentry&lt;/code&gt; is &lt;code&gt;kmem_cache&lt;/code&gt; structure cache.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Initialized in &lt;code&gt;kernel/fs/dcache.c&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;static void __init dcache_init(void)
{
	unsigned int loop;

	/*
	 * A constructor could be added for stable state like the lists,
	 * but it is probably not worth it because of the cache nature
	 * of the dcache.
	 */
	dentry_cache = KMEM_CACHE(dentry,
		SLAB_RECLAIM_ACCOUNT|SLAB_PANIC|SLAB_MEM_SPREAD|SLAB_ACCOUNT);

	/* Hash may have been set up in dcache_init_early */
	if (!hashdist)
		return;

	dentry_hashtable =
		alloc_large_system_hash(&amp;quot;Dentry cache&amp;quot;,
					sizeof(struct hlist_bl_head),
					dhash_entries,
					13,
					0,
					&amp;amp;d_hash_shift,
					&amp;amp;d_hash_mask,
					0,
					0);

	for (loop = 0; loop &amp;lt; (1U &amp;lt;&amp;lt; d_hash_shift); loop++)
		INIT_HLIST_BL_HEAD(dentry_hashtable + loop);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These objects are freed automatically by kernel if there is memory pressure.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To forcefully clean system slab cache.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;echo 3 &amp;gt; /proc/sys/vm/drop_caches # free pagecache, dentries and inodes
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>