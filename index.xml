<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ernestas Poškus.io</title>
    <link>http://out13.com/</link>
    <description>Recent content on Ernestas Poškus.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 25 Sep 2016 19:12:59 +0300</lastBuildDate>
    <atom:link href="http://out13.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Testing Ansible on multiple platforms</title>
      <link>http://out13.com/posts/ansible-testing-multiple-platforms/</link>
      <pubDate>Sun, 25 Sep 2016 19:12:59 +0300</pubDate>
      
      <guid>http://out13.com/posts/ansible-testing-multiple-platforms/</guid>
      <description>

&lt;p&gt;It is very uncommon to find tests on Ansible playbooks. However when they exist it means playbook was created with care.&lt;/p&gt;

&lt;p&gt;When playbook is created with Ansible command &lt;code&gt;ansible-galaxy init myplaybook&lt;/code&gt; it creates number of directories and files, includes basic Travis CI .travis.yml file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;script:
  # Basic role syntax check
  - ansible-playbook tests/test.yml -i tests/inventory --syntax-check
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Basic Travis script brings standard virtual environment operating system which is Ubuntu 12.04 LTS Server Edition 64 bit by default.
This limits testing playbooks on multiple operating systems.
In fact Travis CI virtual environment is limited to Debian operating systems and includes BETA Ubuntu 14.04 LTS Server Edition 64 bit container configurable via.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dist: trusty
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;fortunately-travis-supports-docker&#34;&gt;Fortunately Travis supports docker.&lt;/h4&gt;

&lt;p&gt;I have created bare docker containers that include ansible, can be found here &lt;a href=&#34;https://github.com/ansible-docker-images&#34;&gt;https://github.com/ansible-docker-images&lt;/a&gt; and in docker hub &lt;a href=&#34;https://hub.docker.com/r/ernestasposkus&#34;&gt;https://hub.docker.com/r/ernestasposkus&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Currently available containers are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ubuntu1404&lt;/li&gt;
&lt;li&gt;ubuntu1604&lt;/li&gt;
&lt;li&gt;centos6&lt;/li&gt;
&lt;li&gt;centos7&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you need extra platforms let me now or join organization and contribute.&lt;/p&gt;

&lt;h2 id=&#34;drop-in-replacement-travis-yml-script-for-testing-ansible-on-multiple-platforms&#34;&gt;Drop in replacement .travis.yml script for testing ansible on multiple platforms&lt;/h2&gt;

&lt;p&gt;Template can be found here: &lt;a href=&#34;https://github.com/ansible-docker-images/template&#34;&gt;https://github.com/ansible-docker-images/template&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This includes four files:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;.travis.yml for starting CI itself&lt;/li&gt;
&lt;li&gt;tests/dependencies.yml for extra dependencies to be installed before testing playbook&lt;/li&gt;
&lt;li&gt;playbook.yml for syntax check, first install and idempotence tests&lt;/li&gt;
&lt;li&gt;test.yml where tests are defined basically Ansible tasks with exit status checking&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are looking for real examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/AnsibleShipyard/ansible-zookeeper&#34;&gt;https://github.com/AnsibleShipyard/ansible-zookeeper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/AnsibleShipyard/ansible-mesos&#34;&gt;https://github.com/AnsibleShipyard/ansible-mesos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ernestas-poskus/ansible-nsq&#34;&gt;https://github.com/ernestas-poskus/ansible-nsq&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ernestas-poskus/ansible-prometheus&#34;&gt;https://github.com/ernestas-poskus/ansible-prometheus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample .travis.yml script below.
Includes testing on 4 platforms, dependencies installation, Ansible syntax check, idempotence test and actual tests.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;sudo: required

env:
  global:
    # https://github.com/travis-ci/travis-ci/issues/6461#issuecomment-239577306
    DOCKER_VERSION: &amp;quot;1.9.1-0~trusty&amp;quot;
  matrix:
    - distro: ernestasposkus/centos7
      init: /usr/lib/systemd/systemd
      run_opts: &amp;quot;--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro&amp;quot;
    - distro: ernestasposkus/centos6
      init: /sbin/init
      run_opts: &amp;quot;&amp;quot;
    - distro: ernestasposkus/ubuntu1604
      init: /lib/systemd/systemd
      run_opts: &amp;quot;--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro&amp;quot;
    - distro: ernestasposkus/ubuntu1404
      init: /sbin/init
      run_opts: &amp;quot;&amp;quot;

services:
  - docker

before_install:
  # Downgrade to specific version of Docker engine.
  - sudo apt-get update
  - sudo apt-get remove docker-engine -yq
  - sudo apt-get install docker-engine=$DOCKER_VERSION -yq --no-install-suggests --no-install-recommends --force-yes -o Dpkg::Options::=&amp;quot;--force-confnew&amp;quot;

  # Pull container.
  - &#39;sudo docker pull ${distro}:latest&#39;

script:
  - container_id=$(mktemp)
    # Run container in detached state.
  - &#39;sudo docker run --detach --volume=&amp;quot;${PWD}&amp;quot;:/etc/ansible/roles/role_under_test:ro ${run_opts} ${distro}:latest &amp;quot;${init}&amp;quot; &amp;gt; &amp;quot;${container_id}&amp;quot;&#39;

  # Inspect docker container
  - &#39;sudo docker inspect $(cat ${container_id})&#39;

  # Print ansible version
  - &#39;sudo docker exec --tty &amp;quot;$(cat ${container_id})&amp;quot; env TERM=xterm ansible --version&#39;

  # Check Ansible host setup
  - &#39;sudo docker exec --tty &amp;quot;$(cat ${container_id})&amp;quot; env TERM=xterm ansible all -i &amp;quot;localhost,&amp;quot; -c local -m setup&#39;

  # Install dependencies
  # Uncomment to install dependencies
  # - &#39;sudo docker exec --tty &amp;quot;$(cat ${container_id})&amp;quot; env TERM=xterm ansible-galaxy install geerlingguy.java&#39;
  # - &#39;sudo docker exec --tty &amp;quot;$(cat ${container_id})&amp;quot; env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/dependencies.yml&#39;

  # Ansible syntax check.
  - &#39;sudo docker exec --tty &amp;quot;$(cat ${container_id})&amp;quot; env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/playbook.yml --syntax-check&#39;

  # Test role.
  - &#39;sudo docker exec --tty &amp;quot;$(cat ${container_id})&amp;quot; env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/playbook.yml&#39;

  # Test role idempotence.
  - idempotence=$(mktemp)
  - sudo docker exec &amp;quot;$(cat ${container_id})&amp;quot; ansible-playbook /etc/ansible/roles/role_under_test/tests/playbook.yml | tee -a ${idempotence}
  - &amp;gt;
    tail ${idempotence}
    | grep -q &#39;changed=0.*failed=0&#39;
    &amp;amp;&amp;amp; (echo &#39;Idempotence test: pass&#39; &amp;amp;&amp;amp; exit 0)
    || (echo &#39;Idempotence test: fail&#39; &amp;amp;&amp;amp; exit 1)

  # Test role.
  - &#39;sudo docker exec --tty &amp;quot;$(cat ${container_id})&amp;quot; env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml&#39;

  # View container logs
  - &#39;sudo docker logs &amp;quot;$(cat ${container_id})&amp;quot;&#39;

  # Clean up.
  - &#39;sudo docker stop &amp;quot;$(cat ${container_id})&amp;quot;&#39;

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Ownership is theft experiences building an embedded os in rust</title>
      <link>http://out13.com/paper/ownership-is-theft-experiences-building-an-embedded-os-in-rust/</link>
      <pubDate>Thu, 25 Aug 2016 20:39:03 +0300</pubDate>
      
      <guid>http://out13.com/paper/ownership-is-theft-experiences-building-an-embedded-os-in-rust/</guid>
      <description>

&lt;h2 id=&#34;embedded-os-in-rust&#34;&gt;Embedded OS in Rust&lt;/h2&gt;

&lt;p&gt;Embedded systems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;lack hardware protection mechanism&lt;/li&gt;
&lt;li&gt;less tolerant to crashes&lt;/li&gt;
&lt;li&gt;no easy way for debugging&lt;/li&gt;
&lt;li&gt;GC introduces non-deterministic delay&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;rust&#34;&gt;Rust&lt;/h3&gt;

&lt;p&gt;Rust, a new systems programming language, provides compile-time memory safety checks to help eliminate runtime bugs that manifest from improper memory management.&lt;/p&gt;

&lt;p&gt;Rust’s ownership model prevents otherwise safe resource sharing common in the embedded domain, conflicts with the reality of hardware resources, and hinders using closures for programming asynchronously.&lt;/p&gt;

&lt;p&gt;Rust achieves memory and type safety without garbage collection by using mechanism, derived from affine type and unique pointers, called ownership.&lt;/p&gt;

&lt;p&gt;Preserved type safety without relying on a runtime GC for memory management.&lt;/p&gt;

&lt;p&gt;Allows the programmer to explicitly separate code which is strictly bound to the type system from code which may subvert it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Borrowing&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Value can only be mutably borrowed if there are no other borrows of the value.&lt;/li&gt;
&lt;li&gt;Borrows cannot outlive the value they borrow. This prevents dangling pointer bugs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;execution-context-extension-for-rust&#34;&gt;Execution context (extension for Rust)&lt;/h3&gt;

&lt;p&gt;Reflects the thread of a value&amp;rsquo;s owner in its type.&lt;/p&gt;

&lt;p&gt;Allows multiple borrows of a value from within same thread, but not across threads.&lt;/p&gt;

&lt;p&gt;The goal of execution context is to allow program mutably borrow values multiple times as long as those borrows are never shared between threads.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On the fly garbage collection</title>
      <link>http://out13.com/paper/on-the-fly-garbage-collection/</link>
      <pubDate>Thu, 25 Aug 2016 19:13:56 +0300</pubDate>
      
      <guid>http://out13.com/paper/on-the-fly-garbage-collection/</guid>
      <description>

&lt;p&gt;In our abstract form of the problem, we consider a
directed graph of varying structure but with a fixed
number of nodes, in which each node has at most two
outgoing edges. More precisely, each node may have a
left-hand outgoing edge and may have a right-hand
outgoing edge, but either of them or both may be missing.
In this graph a fixed set of nodes exists, called &amp;ldquo;the
roots.&amp;rdquo; A node is called &amp;ldquo;reachable&amp;rdquo; if it is reachable
from at least one root via a directed path along the edges.&lt;/p&gt;

&lt;p&gt;The subgraph consists of all reachable nodes and their interconnections is
called &amp;lsquo;the data structure&amp;rsquo;; nonreachable nodes that do not belong to the
data structure are called garbage.&lt;/p&gt;

&lt;p&gt;Data structure can modified:
 - Redirecting an outgoing edge of a reachable node towards an already reachable one.
 - Redirecting an outgoing edge of a reachable node towards a not yet reachable one without outgoing edges.
 - Adding&amp;ndash;where an outgoing edge was missing an edge pointing from a reachable node towards an already reachable one.
 - Adding&amp;ndash;where an outgoing edge was missing an edge pointing from a reachable node towards a not yet reachable one without outgoing edges.
 - Removing an outgoing edge of a reachable node&lt;/p&gt;

&lt;p&gt;Mutator: redirect an outgoing edge of reachable node towards an already reachable one.&lt;/p&gt;

&lt;p&gt;Collector:
 - marking phase: mark all reachable nodes
 - appending phase: append all unmarked nodes to the free list and remove the markings from all marked nodes&lt;/p&gt;

&lt;h4 id=&#34;notes&#34;&gt;Notes&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Free list - collection of nodes that have been identified as garbage.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Queues Are Databases</title>
      <link>http://out13.com/paper/queues-are-databases/</link>
      <pubDate>Fri, 12 Aug 2016 16:57:55 +0300</pubDate>
      
      <guid>http://out13.com/paper/queues-are-databases/</guid>
      <description>

&lt;h2 id=&#34;queued-transaction-processing-over-pure-client-server-transaction-processing&#34;&gt;Queued transaction processing over pure client-server transaction processing.&lt;/h2&gt;

&lt;p&gt;Queued systems are build on top of direct systems.&lt;/p&gt;

&lt;p&gt;TP systems offer both queued and direct transaction processing. They offer both client-server and P2P direct processing.&lt;/p&gt;

&lt;p&gt;Queue manager is best built as a naive resource manager atop an object-relational database system.
That system must have good concurrency control, recovery, triggers, security, operations interfaces, and utilities.&lt;/p&gt;

&lt;p&gt;Queues pose difficult problems when implemented atop a database:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Performance: An enqueue transaction is an insert followed by a commit. This places
extreme performance demands on the concurrency control and recovery components
of a database &amp;ndash; it exposes hotspots and high-overhead code.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Concurrency control: The dequeue transaction typically involves deleting a record from
the queue, processing the request, enqueuing results in other queues, and then
committing. Serializable isolation requires that there can be at most one dequeue
executing at a time against each queue. This suggests that queues need lower, indeed specialized, isolation levels.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Read past: locks allow a program to skip over dirty (uncommitted records) to find the
first committed record. This is what a dequeue() operation wants.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Read through: locks allow a program to examine records that have not yet been
committed. This is useful in polling the status of a queued request that is currently
being processed.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Notify: allow a program to wait for a state change in a lock. This allows a
dequeue() operation to wait for one or more queues to become non-empty.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;notes&#34;&gt;Notes&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;MOM - message oriented middleware&lt;/p&gt;

&lt;p&gt;TP - transaction processing&lt;/p&gt;

&lt;p&gt;P2P - peer to peer&lt;/p&gt;

&lt;p&gt;ORB - object request broker&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>An Argument for Increasing TCP’s Initial Congestion Window</title>
      <link>http://out13.com/paper/an-argument-for-increasing-tcp-initial-congestion-window/</link>
      <pubDate>Thu, 04 Aug 2016 22:02:54 +0300</pubDate>
      
      <guid>http://out13.com/paper/an-argument-for-increasing-tcp-initial-congestion-window/</guid>
      <description>

&lt;h2 id=&#34;tcp-congestion-window&#34;&gt;TCP congestion window&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;TCP flows start with initial congestion window of 4 segments (4KB of data).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Window if critical for how quickly flows can finish.&lt;/p&gt;

&lt;p&gt;Increase in 15KB congestion window improves average HTTP latency by 10%, mostly benefits RTT and BDP.&lt;/p&gt;

&lt;p&gt;Slow start increases congestion window by the number of data segments acknowledged for each received ACK.&lt;/p&gt;

&lt;p&gt;TCP latency is dominated by the number of round-trip times in slow-start phase.&lt;/p&gt;

&lt;p&gt;Increasing init_cwnd enables transfers to finish in fewer RTT.&lt;/p&gt;

&lt;h4 id=&#34;notes&#34;&gt;Notes&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;BDP - bandwidth delay product.&lt;/p&gt;

&lt;p&gt;RTT - round trip delay time.&lt;/p&gt;

&lt;p&gt;Wep page average size - 384KB.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Mesos: A Platform for Fine-Grained Resource Sharing in the Data Center</title>
      <link>http://out13.com/paper/mesos-platform-for-resource-sharing/</link>
      <pubDate>Thu, 28 Apr 2016 19:50:29 +0300</pubDate>
      
      <guid>http://out13.com/paper/mesos-platform-for-resource-sharing/</guid>
      <description>

&lt;h2 id=&#34;platform-for-resource-sharing&#34;&gt;Platform for resource sharing&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Sharing improves cluster utilization and avoids per-framework data repli-cation
Organizations will want to run multiple frameworks in the same cluster, picking the best one for each application.
Sharing a cluster between frameworks improves utilization and allows applications to share access to large datasets that may be too costly to replicate&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;architecture&#34;&gt;Architecture&lt;/h3&gt;

&lt;p&gt;Mesos decides how many resources to offer each framework, based on an organizational policy such as fair sharing, while frameworks decide which resources to accept and which tasks to run on them.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Design philosophy - define a minimal interface that enables efficient resource sharing across frameworks, and otherwise push control of task scheduling and execution to the frameworks.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The master decides how many resources to offer to each framework according to a given organizational policy, such as fair sharing, or strict priority.&lt;/p&gt;

&lt;p&gt;A framework running on top of Mesos consists of two components: a scheduler that registers with the master to be offered resources, and an executor process that is launched on slave nodes to run the framework’s tasks.&lt;/p&gt;

&lt;p&gt;Master determines how many resources are offered to each framework, the frameworks’ schedulers select which of the offered resources to use.&lt;/p&gt;

&lt;p&gt;When a frameworks accepts offered resources, it passes to Mesos a description of the tasks it wants to run on them.&lt;/p&gt;

&lt;p&gt;Frameworks achieve data locality by rejecting offers.&lt;/p&gt;

&lt;p&gt;Mesos can reallocate resources if cluster becomes filled with long tasks by revoking (killing) tasks with grace period.&lt;/p&gt;

&lt;p&gt;Isolation through existing OS isolation mechanisms usually system containers. These technologies can limit the CPU, memory, network bandwidth and I/O usage of a process tree.&lt;/p&gt;

&lt;p&gt;Mesos lets them short-circuit the rejection process and avoid communication by providing filters to the master. We support two types of filters: “only offer nodes from list L” and “only offer nodes with at least R resources free”.&lt;/p&gt;

&lt;p&gt;Two types of resources: mandatory and preferred&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A resource is mandatory if a framework must acquire it in order to run.&lt;/li&gt;
&lt;li&gt;Preferred if a framework performs “better” using it, but can also run using another equivalent resource.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;notes&#34;&gt;Notes&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Two-level scheduling mechanism called resource offers&lt;/p&gt;

&lt;p&gt;Delegating control over scheduling to the framework&lt;/p&gt;

&lt;p&gt;Resource offer - encapsulates a bundle of resources that a framework can allocate on a cluster node to run tasks&lt;/p&gt;

&lt;p&gt;Framework ramp-up time - time it takes a new framework to achieve its allocation&lt;/p&gt;

&lt;p&gt;Job completion time - time it takes a job to complete, assuming one job per framework;&lt;/p&gt;

&lt;p&gt;System utilization - total cluster utilization.&lt;/p&gt;

&lt;p&gt;Scale up - frameworks can elastically increase their allocation to take advantage of free resources.&lt;/p&gt;

&lt;p&gt;Scale down - frameworks can relinquish resources without significantly impacting their performance.&lt;/p&gt;

&lt;p&gt;Minimum allocation - frameworks require a certain minimum number of slots before they can start using their slots.&lt;/p&gt;

&lt;p&gt;Task distribution - distribution of the task durations. We consider both homogeneous and heterogeneous distributions.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Tiny LFU highly efficient cache admission policy</title>
      <link>http://out13.com/paper/tiny-lfu-highly-efficient-cache-admission-policy/</link>
      <pubDate>Fri, 22 Apr 2016 21:26:15 +0300</pubDate>
      
      <guid>http://out13.com/paper/tiny-lfu-highly-efficient-cache-admission-policy/</guid>
      <description>

&lt;h2 id=&#34;frequency-based-cache-admission-policy&#34;&gt;Frequency based cache admission policy&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Approximate LFU structure called TinyLFU, which maintains an approximate representation of the access frequency of a large sample of recently accessed items.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;TinyLFU is very compact and light-weight as it builds upon Bloom filter theory.&lt;/p&gt;

&lt;h3 id=&#34;usage&#34;&gt;Usage&lt;/h3&gt;

&lt;p&gt;The intuitive reason why caching works is that data accesses in many
domains of computer science exhibit a considerable degree of “locality”.&lt;/p&gt;

&lt;p&gt;When a data item is accessed, if it already appears in the cache, we say that there is a cache hit; otherwise, it is a cache miss. The ratio between the number of cache hits and the total number of data accesses is known as the cache hit-ratio.&lt;/p&gt;

&lt;p&gt;Admission policy - caching architecture in which an accessed item is only inserted into the cache if an admission policy decides that the cache hit ratio is likely to benefit from replacing it with the cache victim (as chosen by the cache’s replacement policy).&lt;/p&gt;

&lt;h3 id=&#34;architecture&#34;&gt;Architecture&lt;/h3&gt;

&lt;p&gt;The cache eviction policy picks a cache victim, while TinyLFU decides if replacing the cache victim with the new item is expected to increase the hit-ratio.
To do so, TinyLFU maintains statistics of items frequency over a sizable recent history. Storing these statistics is considered prohibitively expensive for practical implementation and therefore TinyLFU approximates them in a highly efficient manner. To keep the history fresh an aging process is performed periodically or incrementally to halve all of the counters.&lt;/p&gt;

&lt;h4 id=&#34;notes&#34;&gt;Notes&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Time locality - access pattern, and consequently the corresponding probability distribution, change over time&lt;/p&gt;

&lt;p&gt;WLFU - Window Least Frequently Used, access frequency for a window, needs to keep track order of requests. Samples of the request stream (called window).&lt;/p&gt;

&lt;p&gt;PLFU - Perfect LFU, popularity based has metadata with counters&lt;/p&gt;

&lt;p&gt;In-memory LFU, outperformed by WLFU at the cost of larger meta-data&lt;/p&gt;

&lt;p&gt;SLRU - Segmented Least Recently Used, policy captures recent popularity by distinguishing between tem-porally popular items that are accessed at least twice in a short window vs. items accessed only once during that period&lt;/p&gt;

&lt;p&gt;LRU-K - combination of LRU &amp;amp; LFU the last K occurrences of each element are remembered. Using this data, LRU-K statistically estimates the momentary frequency of items in order to keep the most frequent pages in memory.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Container based operating system virtualization</title>
      <link>http://out13.com/paper/container-based-operating-system-virtualization/</link>
      <pubDate>Tue, 19 Apr 2016 19:30:48 +0300</pubDate>
      
      <guid>http://out13.com/paper/container-based-operating-system-virtualization/</guid>
      <description>

&lt;h2 id=&#34;alternative-to-hypervisors&#34;&gt;Alternative to hypervisors.&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Workload requirements for a given system will direct users to the point in the design space that
requires the least trade-off.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;sharing-over-isolation&#34;&gt;Sharing over isolation?&lt;/h3&gt;

&lt;p&gt;Hypervisors often deployed to let a single machine host multiple, unrelated
applications, which may run on behalf of independent organizations, as is common when a data center
consolidates multiple physical servers. Hypervisors favor full isolation over sharing.
However, when each virtual machine is running the same kernel and similar operating system
distributions, the degree of isolation offered by hypervisors comes at the cost of efficiency
relative to running all applications on a single kernel.&lt;/p&gt;

&lt;h3 id=&#34;usage&#34;&gt;Usage&lt;/h3&gt;

&lt;p&gt;Software configuration problems incompatibilities between specific OS distributions.&lt;/p&gt;

&lt;p&gt;Resource isolation corresponds to the ability to account for and enforce the resource consumption of one VM such that guarantees and fair shares are preserved for other VM&amp;rsquo;s.&lt;/p&gt;

&lt;p&gt;Many hybrid approaches are also possible: for instance, a system may enforce fair sharing of resources between classes of VMs, which lets one overbook available resources while preventing starvation in overload scenarios.&lt;/p&gt;

&lt;p&gt;The key point is that both hypervisors and COS&amp;rsquo;s incorporate sophisticated resource schedulers to avoid or minimize crosstalk.&lt;/p&gt;

&lt;h3 id=&#34;security-isolation&#34;&gt;Security isolation&lt;/h3&gt;

&lt;p&gt;Configuration independence - cannot conflict with other VM&amp;rsquo;s
Safety - global namespace shared&lt;/p&gt;

&lt;h3 id=&#34;fair-share-and-reservations&#34;&gt;Fair share and Reservations&lt;/h3&gt;

&lt;p&gt;Vserver implements CPU isolation by overlaying a token TBF on top of standard O(1) Linux CPU scheduler.&lt;/p&gt;

&lt;p&gt;For memory storage one can specify the following limits:
 * a) the maximum resident set size (RSS)
 * b) number of anonymous memory pages have (ANON)
 * c) number of pages that may be pinned into memory using mlock() and mlockall() that processes may have within a VM (MEMLOCK).&lt;/p&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Xen is able to support multiple kernels while by design VServer cannot.
Xen also has greater support for virtualizing the network stack and allows for the possibility of VM migration, a feature that is possible for a COS design, but not yet available in VServer. VServer, in turn, maintains a small kernel footprint and performs equally with native Linux kernels in most cases.&lt;/p&gt;

&lt;h4 id=&#34;notes&#34;&gt;Notes&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Undesired interactions between VMs are sometimes called cross-talk.&lt;/p&gt;

&lt;p&gt;COS - Container based Operating System&lt;/p&gt;

&lt;p&gt;TBF - token bucker filter&lt;/p&gt;

&lt;p&gt;HTB - Hierarchical Token Bucket&lt;/p&gt;

&lt;p&gt;RSS - maximum resident set size&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Golang dynamic struct decoration</title>
      <link>http://out13.com/posts/golang-dynamic-struct-decoration/</link>
      <pubDate>Thu, 28 Jan 2016 20:42:45 +0200</pubDate>
      
      <guid>http://out13.com/posts/golang-dynamic-struct-decoration/</guid>
      <description>

&lt;h2 id=&#34;dynamic-struct-decoration-using-type-assertion&#34;&gt;Dynamic struct decoration using type assertion.&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Use cases: API / templates.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Having simple map of:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;  input :=  map[string]interface{}{
    &amp;quot;Key1&amp;quot;: []string{&amp;quot;some&amp;quot;, &amp;quot;key&amp;quot;},
    &amp;quot;key3&amp;quot;: nil,
    &amp;quot;val&amp;quot;: 2,
    &amp;quot;val2&amp;quot;: &amp;quot;str&amp;quot;,
    &amp;quot;val3&amp;quot;: 4,
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One can decorate it using type assertion by iterating over it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;  for key, value := range input {
    slice, ok := value.([]string)
    if ok {
      input[&amp;quot;Count&amp;quot;+key] = len(slice)
    }
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This becomes very useful when serializing struct into json.
To serialize struct use &lt;code&gt;github.com/fatih/structs&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;  input := structs.Map(...)

  for key, value := range input {
    slice, ok := value.([]string)
    if ok {
      input[&amp;quot;Count&amp;quot;+key] = len(slice)
    }
  }
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Setup Rust Racer with multiple Rust versions</title>
      <link>http://out13.com/posts/racer-with-multiple-rust-versions/</link>
      <pubDate>Tue, 15 Sep 2015 20:43:24 +0300</pubDate>
      
      <guid>http://out13.com/posts/racer-with-multiple-rust-versions/</guid>
      <description>

&lt;p&gt;Guide to setup Rust Racer [code completion utility] with multiple/nightly Rust versions.
This will let you navigate &amp;amp; jump to definition between Rust versions.&lt;/p&gt;

&lt;h3 id=&#34;1-install-rust-version-manager&#34;&gt;1) Install Rust version manager&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/sdepold/rsvm#installation&#34;&gt;https://github.com/sdepold/rsvm#installation&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;2-install-desired-rust-version&#34;&gt;2) Install desired Rust version&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;rsvm install 0.12.0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;3-switch-use-desired-rust-version&#34;&gt;3) Switch/use desired Rust version&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;rsvm use 0.12.0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;4-rsvm-makes-symbolic-link-to-current-rust-version-in&#34;&gt;4) rsvm - makes symbolic link to current rust version in&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;ls -la $HOME/.rsvm/current&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;total 56K
drwxrwxr-x  2 user user 4.0K Sep 14 21:31 test
drwxrwxr-x  4 user user 4.0K Sep 15 14:33 1.2.0
drwxrwxr-x  5 user user 4.0K Sep 15 14:48 .
drwxrwxr-x  8 user user 4.0K Sep 21 22:15 .git
drwx------ 24 user user 4.0K Sep 21 22:17 ..
-rw-rw-r--  1 user user 1.1K Sep 14 21:31 LICENSE
-rw-rw-r--  1 user user  324 Sep 14 21:31 CHANGELOG.md
-rw-rw-r--  1 user user  249 Sep 14 21:31 .travis.yml
-rw-rw-r--  1 user user 9.1K Sep 14 21:31 rsvm.sh
-rw-rw-r--  1 user user 2.1K Sep 14 21:31 rsvm.fish
-rw-rw-r--  1 user user 1.3K Sep 14 21:31 install.sh
-rw-rw-r--  1 user user 1.8K Sep 14 21:31 README.md
lrwxrwxrwx  1 user user   20 Sep 15 14:48 current -&amp;gt; /home/user/.rsvm/1.2.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;5-export-rust-source-path-to-that-symbolic-link&#34;&gt;5) Export Rust source path to that symbolic link&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;export RUST_SRC_PATH=&amp;quot;$HOME/.rsvm/current&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;6-install-rust-racer&#34;&gt;6) Install Rust racer&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;git clone &lt;a href=&#34;https://github.com/phildawes/racer.git&#34;&gt;https://github.com/phildawes/racer.git&lt;/a&gt; &amp;ldquo;$HOME/rust-racer&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;7-build-rust-racer&#34;&gt;7) Build Rust racer&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;cd $HOME/rust-racer; cargo build &amp;ndash;release.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;7-install-vim-racer-vim-plugin-emacs-kate-available&#34;&gt;7) Install vim-racer vim plugin (Emacs, Kate available)&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/phildawes/racer#vim-integration&#34;&gt;https://github.com/phildawes/racer#vim-integration&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;8-define-g-racer-cmd-in-vimrc&#34;&gt;8) Define g:racer_cmd in .vimrc&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;let g:racer_cmd = &amp;ldquo;$HOME/rust-racer/target/release/racer&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;9-done&#34;&gt;9) Done&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Enjoy multi Rust environment with code completion &amp;amp; goto-definition&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Readability tests</title>
      <link>http://out13.com/posts/readability-tests/</link>
      <pubDate>Sat, 04 Apr 2015 15:13:11 +0300</pubDate>
      
      <guid>http://out13.com/posts/readability-tests/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Flesch%E2%80%93Kincaid_readability_tests&#34;&gt;Flesch–Kincaid readability tests&lt;/a&gt;.
Are readability tests designed to indicate how difficult a reading passage in English is to understand. There are two tests, the Flesch Reading Ease, and the Flesch–Kincaid Grade Level. [WIKI]&lt;/p&gt;

&lt;p&gt;Due to own usage reasons I have decided to implement these readability tests in favourite language.
Algorithm is quite simple I will focus on Flesch Reading ease.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Flesch Reading Ease test&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://out13.com/images/reading_ease.png&#34; alt=&#34;Flesh Reading Ease test&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Score&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;90.0–100.0&lt;/td&gt;
&lt;td&gt;easily understood by an average 11-year-old student&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;60.0–70.0&lt;/td&gt;
&lt;td&gt;easily understood by 13- to 15-year-old students&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0.0–30.0&lt;/td&gt;
&lt;td&gt;best understood by university graduates&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Implementation is trivial except &lt;code&gt;total_syllables&lt;/code&gt; part. I have had number of struggles with this one.
Main caveat with syllables is that there no reliable facicility to reach consensus on exact syllable count.
Every source where I was verifying number of syllables had a difference usually +/- 1 in some cases +2 syllables per sentence.&lt;/p&gt;

&lt;p&gt;Eventually decided to trust this: &lt;a href=&#34;http://www.syllablecount.com/syllables/word&#34;&gt;http://www.syllablecount.com/syllables/word&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Test cases here: &lt;a href=&#34;https://github.com/ernestas-poskus/syllables/blob/master/syllables_test.go&#34;&gt;syllables_test.go&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tl;dr&lt;/p&gt;

&lt;h1 id=&#34;flesch-reading-ease-in-action&#34;&gt;Flesch Reading Ease in action&lt;/h1&gt;

&lt;p&gt;Took presidential speeches from &lt;a href=&#34;http://millercenter.org/president/speeches&#34;&gt;http://millercenter.org/president/speeches&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;george-washington-first-inaugural-address-april-30-1789&#34;&gt;George Washington, First Inaugural Address (April 30, 1789)&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;In this conflict of emotions, all I dare aver, is, that it has been my faithful study to collect my duty from a just appreciation of every circumstance, by which it might be affected. All I dare hope, is, that, if in executing this task I have been too much swayed by a grateful remembrance of former instances, or by an affectionate sensibility to this transcendent proof, of the confidence of my fellow-citizens; and have thence too little consulted my incapacity as well as disinclination for the weighty and untried cares before me; my error will be palliated by the motives which misled me, and its consequences be judged by my Country, with some share of the partiality in which they originated.&amp;rdquo;,&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;abraham-lincoln-first-inaugural-address-march-4-1861&#34;&gt;Abraham Lincoln, First Inaugural Address (March 4, 1861)&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;I take the official oath to-day with no mental reservations, and with no purpose to construe the Constitution or laws by any hypercritical rules. And while I do not choose now to specify particular acts of Congress as proper to be enforced, I do suggest that it will be much safer for all, both in official and private stations, to conform to and abide by all those acts which stand unrepealed, than to violate any of them, trusting to find impunity in having them held to be unconstitutional.&amp;rdquo;,&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;barack-obama-acceptance-speech-at-the-democratic-national-convention-august-28-2008&#34;&gt;Barack Obama, Acceptance Speech at the Democratic National Convention (August 28, 2008)&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;It is that promise that has always set this country apart—that through hard work and sacrifice, each of us can pursue our individual dreams but still come together as one American family, to ensure that the next generation can pursue their dreams as well. That&amp;rsquo;s why I stand here tonight. Because for two hundred and thirty two years, at each moment when that promise was in jeopardy, ordinary men and women—students and soldiers, farmers and teachers, nurses and janitors—found the courage to keep it alive. We meet at one of those defining moments—a moment when our nation is at war, our economy is in turmoil, and the American promise has been threatened once more.&amp;rdquo;,&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;results-code-code-flesch-reading-ease-go&#34;&gt;Results &lt;a href=&#34;http://out13.com/code/flesch_reading_ease.go&#34;&gt;code&lt;/a&gt;&lt;/h1&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Author&lt;/th&gt;
&lt;th&gt;year&lt;/th&gt;
&lt;th&gt;length&lt;/th&gt;
&lt;th&gt;Score(Flesch Reading ease)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;George Washington&lt;/td&gt;
&lt;td&gt;1789&lt;/td&gt;
&lt;td&gt;701&lt;/td&gt;
&lt;td&gt;16.6&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Abraham Lincoln&lt;/td&gt;
&lt;td&gt;1861&lt;/td&gt;
&lt;td&gt;493&lt;/td&gt;
&lt;td&gt;35.3&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Barack Obama&lt;/td&gt;
&lt;td&gt;2008&lt;/td&gt;
&lt;td&gt;676&lt;/td&gt;
&lt;td&gt;50.3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;It is interesting to see how complexity of presidential speeches changed as time passed.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Programming languages in bytes</title>
      <link>http://out13.com/posts/programming-languages/</link>
      <pubDate>Sun, 29 Mar 2015 12:59:46 +0300</pubDate>
      
      <guid>http://out13.com/posts/programming-languages/</guid>
      <description>&lt;div id=&#34;pieChart&#34;&gt;&lt;/div&gt;

&lt;script src=&#34;//cdnjs.cloudflare.com/ajax/libs/d3/3.4.4/d3.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;http://out13.com/js/d3pie.min.js&#34;&gt;&lt;/script&gt;
&lt;script&gt;
var pie = new d3pie(&#34;pieChart&#34;, {
  &#34;header&#34;: {
    &#34;subtitle&#34;: {
      &#34;color&#34;: &#34;#999999&#34;,
      &#34;text&#34;: &#34;Generated from github.com/ernestas-poskus&#34;,
      &#34;fontSize&#34;: 12,
      &#34;font&#34;: &#34;open sans&#34;
    },
    &#34;titleSubtitlePadding&#34;: 9
  },
  &#34;footer&#34;: {
    &#34;color&#34;: &#34;#999999&#34;,
    &#34;fontSize&#34;: 10,
    &#34;font&#34;: &#34;open sans&#34;,
    &#34;location&#34;: &#34;bottom-left&#34;
  },
  &#34;size&#34;: {
    &#34;canvasHeight&#34;: 400,
    &#34;canvasWidth&#34;: 490,
    &#34;pieInnerRadius&#34;: &#34;50%&#34;,
    &#34;pieOuterRadius&#34;: &#34;80%&#34;
  },
  &#34;data&#34;: {
    &#34;sortOrder&#34;: &#34;value-desc&#34;,
    &#34;content&#34;: [{&#34;label&#34;: &#34;Haskell&#34;, &#34;value&#34;: 801, &#34;color&#34;: &#34;#29b544&#34;},{&#34;label&#34;: &#34;Lua&#34;, &#34;value&#34;: 1152, &#34;color&#34;: &#34;#fa1fa1&#34;},{&#34;label&#34;: &#34;Standard ML&#34;, &#34;value&#34;: 89142, &#34;color&#34;: &#34;#dc566d&#34;},{&#34;label&#34;: &#34;Scala&#34;, &#34;value&#34;: 288778, &#34;color&#34;: &#34;#7dd3b0&#34;},{&#34;label&#34;: &#34;Python&#34;, &#34;value&#34;: 308794, &#34;color&#34;: &#34;#3581ba&#34;},{&#34;label&#34;: &#34;Shell&#34;, &#34;value&#34;: 37004, &#34;color&#34;: &#34;#89e051&#34;},{&#34;label&#34;: &#34;CoffeeScript&#34;, &#34;value&#34;: 3723, &#34;color&#34;: &#34;#244776&#34;},{&#34;label&#34;: &#34;Racket&#34;, &#34;value&#34;: 50190, &#34;color&#34;: &#34;#ae17ff&#34;},{&#34;label&#34;: &#34;PHP&#34;, &#34;value&#34;: 431573, &#34;color&#34;: &#34;#4F5D95&#34;},{&#34;label&#34;: &#34;Makefile&#34;, &#34;value&#34;: 3960, &#34;color&#34;: &#34;&#34;},{&#34;label&#34;: &#34;Puppet&#34;, &#34;value&#34;: 15697, &#34;color&#34;: &#34;#cc5555&#34;},{&#34;label&#34;: &#34;Go&#34;, &#34;value&#34;: 823140, &#34;color&#34;: &#34;#375eab&#34;},{&#34;label&#34;: &#34;JavaScript&#34;, &#34;value&#34;: 450901, &#34;color&#34;: &#34;#f1e05a&#34;},{&#34;label&#34;: &#34;C++&#34;, &#34;value&#34;: 40479, &#34;color&#34;: &#34;&#34;},{&#34;label&#34;: &#34;Ruby&#34;, &#34;value&#34;: 253162, &#34;color&#34;: &#34;#701516&#34;},{&#34;label&#34;: &#34;Clojure&#34;, &#34;value&#34;: 1627, &#34;color&#34;: &#34;#db5855&#34;},{&#34;label&#34;: &#34;CSS&#34;, &#34;value&#34;: 13432, &#34;color&#34;: &#34;#563d7c&#34;},{&#34;label&#34;: &#34;VimL&#34;, &#34;value&#34;: 32990, &#34;color&#34;: &#34;#199c4b&#34;},{&#34;label&#34;: &#34;Erlang&#34;, &#34;value&#34;: 395, &#34;color&#34;: &#34;#0faf8d&#34;},{&#34;label&#34;: &#34;C&#34;, &#34;value&#34;: 3968, &#34;color&#34;: &#34;#555&#34;},{&#34;label&#34;: &#34;Java&#34;, &#34;value&#34;: 10361, &#34;color&#34;: &#34;#b07219&#34;}]
  },
  &#34;labels&#34;: {
    &#34;outer&#34;: {
      &#34;pieDistance&#34;: 20
    },
    &#34;inner&#34;: {
      &#34;hideWhenLessThanPercentage&#34;: 3
    },
    &#34;mainLabel&#34;: {
      &#34;fontSize&#34;: 11
    },
    &#34;percentage&#34;: {
      &#34;color&#34;: &#34;#ffffff&#34;,
      &#34;decimalPlaces&#34;: 0
    },
    &#34;value&#34;: {
      &#34;color&#34;: &#34;#adadad&#34;,
      &#34;fontSize&#34;: 11
    },
    &#34;lines&#34;: {
      &#34;enabled&#34;: true
    }
  },
  &#34;effects&#34;: {
    &#34;pullOutSegmentOnClick&#34;: {
      &#34;effect&#34;: &#34;linear&#34;,
      &#34;speed&#34;: 400,
      &#34;size&#34;: 8
    }
  },
  &#34;misc&#34;: {
    &#34;gradient&#34;: {
      &#34;enabled&#34;: true,
      &#34;percentage&#34;: 100
    }
  }
});
&lt;/script&gt;

Wrote little Go + d3pie script which shows user programmed languages in bytes (not actual lines of programming language).
Code can be found here: &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/ernestas-poskus/github-languages&#34;&gt;github.com/ernestas-poskus/github-languages&lt;/a&gt;
</description>
    </item>
    
  </channel>
</rss>